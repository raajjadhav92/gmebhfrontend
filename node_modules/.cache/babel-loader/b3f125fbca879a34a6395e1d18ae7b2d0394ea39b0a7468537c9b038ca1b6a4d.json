{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raajj\\\\Desktop\\\\backend\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [initialized, setInitialized] = useState(false);\n\n  // Stable auth check function\n  const checkAuthStatus = useCallback(async () => {\n    if (initialized) return; // Prevent multiple calls\n\n    try {\n      const token = localStorage.getItem('token');\n      const savedUser = localStorage.getItem('user');\n      if (!token || !savedUser) {\n        setLoading(false);\n        setInitialized(true);\n        return;\n      }\n\n      // Parse saved user data\n      let userData;\n      try {\n        userData = JSON.parse(savedUser);\n      } catch (e) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setLoading(false);\n        setInitialized(true);\n        return;\n      }\n\n      // Use saved user data immediately to prevent flickering\n      setUser(userData);\n      setIsAuthenticated(true);\n      setLoading(false);\n      setInitialized(true);\n    } catch (err) {\n      console.error('Auth check error:', err);\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setUser(null);\n      setIsAuthenticated(false);\n      setLoading(false);\n      setInitialized(true);\n    }\n  }, [initialized]);\n\n  // Initialize auth on mount\n  useEffect(() => {\n    if (!initialized) {\n      checkAuthStatus();\n    }\n  }, [checkAuthStatus, initialized]);\n  const login = useCallback(async (email, password) => {\n    try {\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        const {\n          token,\n          user\n        } = data;\n\n        // Store token and user data\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        setUser(user);\n        setIsAuthenticated(true);\n        return {\n          success: true,\n          user\n        };\n      } else {\n        return {\n          success: false,\n          message: data.message || 'Login failed'\n        };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        message: 'Network error. Please try again.'\n      };\n    }\n  }, []);\n  const logout = useCallback(async () => {\n    try {\n      // Call logout endpoint\n      const token = localStorage.getItem('token');\n      if (token) {\n        await fetch('/api/auth/logout', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Clear local storage\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  }, []);\n\n  // Memoize context value to prevent unnecessary re-renders\n  const value = useMemo(() => ({\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout\n  }), [user, isAuthenticated, loading, login, logout]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"gn4YX3beMpznWWwZ8k4KmLnneEI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","useMemo","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","initialized","setInitialized","checkAuthStatus","token","localStorage","getItem","savedUser","userData","JSON","parse","e","removeItem","err","console","error","login","email","password","response","fetch","method","headers","body","stringify","data","json","ok","success","setItem","message","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/raajj/Desktop/backend/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback, useMemo } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [initialized, setInitialized] = useState(false);\n\n  // Stable auth check function\n  const checkAuthStatus = useCallback(async () => {\n    if (initialized) return; // Prevent multiple calls\n    \n    try {\n      const token = localStorage.getItem('token');\n      const savedUser = localStorage.getItem('user');\n      \n      if (!token || !savedUser) {\n        setLoading(false);\n        setInitialized(true);\n        return;\n      }\n\n      // Parse saved user data\n      let userData;\n      try {\n        userData = JSON.parse(savedUser);\n      } catch (e) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setLoading(false);\n        setInitialized(true);\n        return;\n      }\n\n      // Use saved user data immediately to prevent flickering\n      setUser(userData);\n      setIsAuthenticated(true);\n      setLoading(false);\n      setInitialized(true);\n      \n    } catch (err) {\n      console.error('Auth check error:', err);\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setUser(null);\n      setIsAuthenticated(false);\n      setLoading(false);\n      setInitialized(true);\n    }\n  }, [initialized]);\n\n  // Initialize auth on mount\n  useEffect(() => {\n    if (!initialized) {\n      checkAuthStatus();\n    }\n  }, [checkAuthStatus, initialized]);\n\n  const login = useCallback(async (email, password) => {\n    try {\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok && data.success) {\n        const { token, user } = data;\n        \n        // Store token and user data\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        \n        setUser(user);\n        setIsAuthenticated(true);\n        \n        return { success: true, user };\n      } else {\n        return { \n          success: false, \n          message: data.message || 'Login failed' \n        };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return { \n        success: false, \n        message: 'Network error. Please try again.' \n      };\n    }\n  }, []);\n\n  const logout = useCallback(async () => {\n    try {\n      // Call logout endpoint\n      const token = localStorage.getItem('token');\n      if (token) {\n        await fetch('/api/auth/logout', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        });\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Clear local storage\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  }, []);\n\n  // Memoize context value to prevent unnecessary re-renders\n  const value = useMemo(() => ({\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n  }), [user, isAuthenticated, loading, login, logout]);\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpG,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMS,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGV,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAMsB,eAAe,GAAGpB,WAAW,CAAC,YAAY;IAC9C,IAAIkB,WAAW,EAAE,OAAO,CAAC;;IAEzB,IAAI;MACF,MAAMG,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,SAAS,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAE9C,IAAI,CAACF,KAAK,IAAI,CAACG,SAAS,EAAE;QACxBP,UAAU,CAAC,KAAK,CAAC;QACjBE,cAAc,CAAC,IAAI,CAAC;QACpB;MACF;;MAEA;MACA,IAAIM,QAAQ;MACZ,IAAI;QACFA,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,SAAS,CAAC;MAClC,CAAC,CAAC,OAAOI,CAAC,EAAE;QACVN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;QAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;QAC/BZ,UAAU,CAAC,KAAK,CAAC;QACjBE,cAAc,CAAC,IAAI,CAAC;QACpB;MACF;;MAEA;MACAN,OAAO,CAACY,QAAQ,CAAC;MACjBV,kBAAkB,CAAC,IAAI,CAAC;MACxBE,UAAU,CAAC,KAAK,CAAC;MACjBE,cAAc,CAAC,IAAI,CAAC;IAEtB,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEF,GAAG,CAAC;MACvCR,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;MAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;MAC/BhB,OAAO,CAAC,IAAI,CAAC;MACbE,kBAAkB,CAAC,KAAK,CAAC;MACzBE,UAAU,CAAC,KAAK,CAAC;MACjBE,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC,EAAE,CAACD,WAAW,CAAC,CAAC;;EAEjB;EACAnB,SAAS,CAAC,MAAM;IACd,IAAI,CAACmB,WAAW,EAAE;MAChBE,eAAe,CAAC,CAAC;IACnB;EACF,CAAC,EAAE,CAACA,eAAe,EAAEF,WAAW,CAAC,CAAC;EAElC,MAAMe,KAAK,GAAGjC,WAAW,CAAC,OAAOkC,KAAK,EAAEC,QAAQ,KAAK;IACnD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;QAC9CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEd,IAAI,CAACe,SAAS,CAAC;UAAEP,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAMO,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAIP,QAAQ,CAACQ,EAAE,IAAIF,IAAI,CAACG,OAAO,EAAE;QAC/B,MAAM;UAAExB,KAAK;UAAET;QAAK,CAAC,GAAG8B,IAAI;;QAE5B;QACApB,YAAY,CAACwB,OAAO,CAAC,OAAO,EAAEzB,KAAK,CAAC;QACpCC,YAAY,CAACwB,OAAO,CAAC,MAAM,EAAEpB,IAAI,CAACe,SAAS,CAAC7B,IAAI,CAAC,CAAC;QAElDC,OAAO,CAACD,IAAI,CAAC;QACbG,kBAAkB,CAAC,IAAI,CAAC;QAExB,OAAO;UAAE8B,OAAO,EAAE,IAAI;UAAEjC;QAAK,CAAC;MAChC,CAAC,MAAM;QACL,OAAO;UACLiC,OAAO,EAAE,KAAK;UACdE,OAAO,EAAEL,IAAI,CAACK,OAAO,IAAI;QAC3B,CAAC;MACH;IACF,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO;QACLa,OAAO,EAAE,KAAK;QACdE,OAAO,EAAE;MACX,CAAC;IACH;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,MAAM,GAAGhD,WAAW,CAAC,YAAY;IACrC,IAAI;MACF;MACA,MAAMqB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACT,MAAMgB,KAAK,CAAC,kBAAkB,EAAE;UAC9BC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,eAAe,EAAE,UAAUlB,KAAK,EAAE;YAClC,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC,CAAC,SAAS;MACR;MACAV,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;MAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;MAC/BhB,OAAO,CAAC,IAAI,CAAC;MACbE,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMkC,KAAK,GAAGhD,OAAO,CAAC,OAAO;IAC3BW,IAAI;IACJE,eAAe;IACfE,OAAO;IACPiB,KAAK;IACLe;EACF,CAAC,CAAC,EAAE,CAACpC,IAAI,EAAEE,eAAe,EAAEE,OAAO,EAAEiB,KAAK,EAAEe,MAAM,CAAC,CAAC;EAEpD,oBACE7C,OAAA,CAACC,WAAW,CAAC8C,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAvC,QAAA,EAChCA;EAAQ;IAAAyC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3C,GAAA,CApIWF,YAAY;AAAA8C,EAAA,GAAZ9C,YAAY;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}